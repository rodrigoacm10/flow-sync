datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}
 
generator client {
  provider = "prisma-client-js"
}

model User {
  id        String     @id @default(uuid())
  name      String
  password  String
  saved     Boolean
  synced    Boolean    @default(false)

  groups     Group[]
  chips      Chip[]
  clients    Client[]
  categories Category[]
  products   Product[]
  orders     Order[]
}

model Group {
  id      String   @id @default(uuid())
  name    String
  saved   Boolean
  synced  Boolean  @default(false)
  userId  String

  user    User     @relation(fields: [userId], references: [id])
  clients Client[]
}

model Chip {
  id         String      @id @default(uuid())
  value      Int
  date       DateTime
  saved      Boolean
  synced     Boolean      @default(false)
  userId     String
  clientId   String

  user        User         @relation(fields: [userId], references: [id])
  clientChips ClientChip[]
}

model ClientChip {
  id       String  @id @default(uuid())
  chipId   String
  clientId String
  saved    Boolean
  synced   Boolean @default(false)

  chip   Chip   @relation(fields: [chipId], references: [id])
  client Client @relation(fields: [clientId], references: [id])
}

model Client {
  id         String      @id @default(uuid())
  name       String
  useChip    Boolean
  saved      Boolean
  synced     Boolean     @default(false)
  userId     String
  groupId    String

  user        User         @relation(fields: [userId], references: [id])
  group       Group        @relation(fields: [groupId], references: [id])
  clientChips ClientChip[]
}

model Category {
  id       String    @id @default(uuid())
  name     String
  saved    Boolean
  synced   Boolean   @default(false)
  userId   String

  user     User      @relation(fields: [userId], references: [id])
  products Product[]
}

model Product {
  id            String         @id @default(uuid())
  name          String
  value         Int
  useQuantity   Boolean
  quantity      Int?
  saved         Boolean
  synced        Boolean        @default(false)
  userId        String
  categoryId    String

  user          User           @relation(fields: [userId], references: [id])
  category      Category       @relation(fields: [categoryId], references: [id])
  orderProducts OrderProduct[]
}

model OrderProduct {
  id        String   @id @default(uuid())
  orderId   String
  productId String
  saved     Boolean
  synced    Boolean  @default(false)

  product Product @relation(fields: [productId], references: [id])
  order   Order   @relation(fields: [orderId], references: [id])
}

model Order {
  id           String         @id @default(uuid())
  date         DateTime
  clientId     String?
  clientName   String
  saved        Boolean
  synced       Boolean        @default(false)
  userId       String

  user          User           @relation(fields: [userId], references: [id])
  orderProducts OrderProduct[]
}
